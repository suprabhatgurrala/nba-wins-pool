# development environment defaults
services:
  backend:
    restart: on-failure
    ports:
    - "8000:8000"
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /app
          ignore:
            - .venv/
        - action: rebuild
          path: ./pyproject.toml
    environment:
      - CORS_ALLOW_ALL=true
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@database:5432/nba_wins_pool
    command: ["fastapi", "dev", "--host", "0.0.0.0", "src/nba_wins_pool/main_backend.py"]
  frontend:
    ports:
    - "5173:5173"
    - "8080:5173"
    build: ./frontend
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app
        - action: rebuild
          path: ./package.json
    environment:
      - VITE_BACKEND_PROXY_URL=http://backend:8000
    command: ["npm", "run", "dev"]

  database:
    image: postgres:16-alpine
    ports:
    - "5432:5432"
    environment:
      POSTGRES_DB: nba_wins_pool
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d nba_wins_pool"]
      interval: 10s
      timeout: 5s
      retries: 5

  database-migrate:
    build: ./backend
    depends_on:
      database:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@database:5432/nba_wins_pool
    volumes:
      - ./backend:/app
      - /app/.venv
    command: ["uv", "run", "alembic", "--config", "pyproject.toml", "upgrade", "head"]


volumes:
  db_data: