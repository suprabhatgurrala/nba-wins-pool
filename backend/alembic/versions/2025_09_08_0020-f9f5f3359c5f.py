"""init

Revision ID: f9f5f3359c5f
Revises:
Create Date: 2025-09-08 00:20:53.179123

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "f9f5f3359c5f"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # Create base tables first (no foreign keys to other auction tables)
    op.create_table(
        "pool",
        sa.Column("slug", sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
        sa.Column("rules", sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_pool_slug"), "pool", ["slug"], unique=True)

    op.create_table(
        "team",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("league_slug", sa.Enum("NBA", name="leagueslug"), nullable=False),
        sa.Column("external_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("logo_url", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_team_external_id"), "team", ["external_id"], unique=False)
    op.create_index(op.f("ix_team_league_slug"), "team", ["league_slug"], unique=False)

    op.create_table(
        "roster",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
        sa.Column("pool_id", sa.Uuid(), nullable=False),
        sa.Column("season", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["pool_id"], ["pool.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_roster_pool_id"), "roster", ["pool_id"], unique=False)
    op.create_index(op.f("ix_roster_season"), "roster", ["season"], unique=False)

    # Create auction table without circular foreign key constraint
    op.create_table(
        "auction",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("pool_id", sa.Uuid(), nullable=False),
        sa.Column("season", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("status", sa.Enum("NOT_STARTED", "ACTIVE", "COMPLETED", name="auctionstatus"), nullable=False),
        sa.Column("current_lot_id", sa.Uuid(), nullable=True),
        sa.Column("max_lots_per_participant", sa.Integer(), nullable=False),
        sa.Column("min_bid_increment", sa.Numeric(scale=2), nullable=False),
        sa.Column("starting_participant_budget", sa.Numeric(scale=2), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("started_at", sa.DateTime(), nullable=True),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["pool_id"],
            ["pool.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("pool_id", "season"),
    )
    op.create_index(op.f("ix_auction_pool_id"), "auction", ["pool_id"], unique=False)
    op.create_index(op.f("ix_auction_season"), "auction", ["season"], unique=False)

    op.create_table(
        "auctionparticipant",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
        sa.Column("auction_id", sa.Uuid(), nullable=False),
        sa.Column("roster_id", sa.Uuid(), nullable=False),
        sa.Column("budget", sa.Numeric(scale=2), nullable=False),
        sa.Column("num_lots_won", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["auction_id"], ["auction.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["roster_id"],
            ["roster.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("auction_id", "roster_id"),
    )
    op.create_index(op.f("ix_auctionparticipant_auction_id"), "auctionparticipant", ["auction_id"], unique=False)
    op.create_index(op.f("ix_auctionparticipant_roster_id"), "auctionparticipant", ["roster_id"], unique=False)

    # Create auctionlot table without circular foreign key constraints
    op.create_table(
        "auctionlot",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("status", sa.Enum("READY", "OPEN", "CLOSED", name="auctionlotstatus"), nullable=False),
        sa.Column("auction_id", sa.Uuid(), nullable=False),
        sa.Column("team_id", sa.Uuid(), nullable=False),
        sa.Column("winning_bid_id", sa.Uuid(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("opened_at", sa.DateTime(), nullable=True),
        sa.Column("closed_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["auction_id"], ["auction.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["team_id"],
            ["team.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_auctionlot_auction_id"), "auctionlot", ["auction_id"], unique=False)

    op.create_table(
        "bid",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("lot_id", sa.Uuid(), nullable=False),
        sa.Column("participant_id", sa.Uuid(), nullable=False),
        sa.Column("amount", sa.Numeric(scale=2), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["lot_id"], ["auctionlot.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["participant_id"], ["auctionparticipant.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_bid_lot_id"), "bid", ["lot_id"], unique=False)
    op.create_index(op.f("ix_bid_participant_id"), "bid", ["participant_id"], unique=False)

    op.create_table(
        "rosterslot",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("roster_id", sa.Uuid(), nullable=False),
        sa.Column("team_id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("auction_lot_id", sa.Uuid(), nullable=True),
        sa.Column("auction_price", sa.Numeric(scale=2), nullable=True),
        sa.ForeignKeyConstraint(["auction_lot_id"], ["auctionlot.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(["roster_id"], ["roster.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["team_id"],
            ["team.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_rosterslot_roster_id"), "rosterslot", ["roster_id"], unique=False)

    # Add circular foreign key constraints after all tables exist
    op.create_foreign_key("fk_auction_current_lot_id", "auction", "auctionlot", ["current_lot_id"], ["id"])
    op.create_foreign_key("fk_auctionlot_winning_bid_id", "auctionlot", "bid", ["winning_bid_id"], ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # Drop circular foreign key constraints first
    op.drop_constraint("fk_auctionlot_winning_bid_id", "auctionlot", type_="foreignkey")
    op.drop_constraint("fk_auction_current_lot_id", "auction", type_="foreignkey")

    # Drop tables in reverse order
    op.drop_index(op.f("ix_rosterslot_roster_id"), table_name="rosterslot")
    op.drop_table("rosterslot")
    op.drop_index(op.f("ix_bid_participant_id"), table_name="bid")
    op.drop_index(op.f("ix_bid_lot_id"), table_name="bid")
    op.drop_table("bid")
    op.drop_index(op.f("ix_auctionlot_auction_id"), table_name="auctionlot")
    op.drop_table("auctionlot")
    op.drop_index(op.f("ix_auctionparticipant_roster_id"), table_name="auctionparticipant")
    op.drop_index(op.f("ix_auctionparticipant_auction_id"), table_name="auctionparticipant")
    op.drop_table("auctionparticipant")
    op.drop_index(op.f("ix_auction_pool_id"), table_name="auction")
    op.drop_index(op.f("ix_auction_season"), table_name="auction")
    op.drop_table("auction")
    op.drop_index(op.f("ix_roster_pool_id"), table_name="roster")
    op.drop_index(op.f("ix_roster_season"), table_name="roster")
    op.drop_table("roster")
    op.drop_index(op.f("ix_team_league_slug"), table_name="team")
    op.drop_index(op.f("ix_team_external_id"), table_name="team")
    op.drop_table("team")
    op.drop_index(op.f("ix_pool_slug"), table_name="pool")
    op.drop_table("pool")
    # ### end Alembic commands ###
