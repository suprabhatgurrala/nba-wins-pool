"""init

Revision ID: 08eb67804686
Revises:
Create Date: 2025-09-05 05:13:36.459691

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "08eb67804686"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "pool",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
        sa.Column("rules", sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("slug", sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
        sa.Column("season", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_pool_season"), "pool", ["season"], unique=False)
    op.create_index(op.f("ix_pool_slug"), "pool", ["slug"], unique=True)
    op.create_table(
        "team",
        sa.Column("slug", sqlmodel.sql.sqltypes.AutoString(length=3), nullable=False),
        sa.Column("external_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("logo_url", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_team_external_id"), "team", ["external_id"], unique=False)
    op.create_index(op.f("ix_team_slug"), "team", ["slug"], unique=True)
    op.create_table(
        "auction",
        sa.Column("pool_id", sa.Uuid(), nullable=False),
        sa.Column("status", sa.Enum("DRAFT", "ACTIVE", "COMPLETED", name="auctionstatus"), nullable=False),
        sa.Column("lots_per_member", sa.Integer(), nullable=False),
        sa.Column("min_bid_increment", sa.Numeric(scale=2), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("started_at", sa.DateTime(), nullable=True),
        sa.Column("completed_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["pool_id"],
            ["pool.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_auction_pool_id"), "auction", ["pool_id"], unique=False)
    op.create_table(
        "member",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("pool_id", sa.Uuid(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("budget", sa.Numeric(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["pool_id"],
            ["pool.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_member_pool_id"), "member", ["pool_id"], unique=False)
    op.create_table(
        "auctionlot",
        sa.Column("auction_id", sa.Uuid(), nullable=False),
        sa.Column("team_id", sa.Uuid(), nullable=False),
        sa.Column("nominator_id", sa.Uuid(), nullable=False),
        sa.Column("winning_bidder_id", sa.Uuid(), nullable=True),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("winning_bid_amount", sa.Numeric(scale=2), nullable=True),
        sa.Column("status", sa.Enum("OPEN", "CLOSED", name="lotstatus"), nullable=False),
        sa.Column("opened_at", sa.DateTime(), nullable=False),
        sa.Column("closed_at", sa.DateTime(), nullable=True),
        sa.Column("closed_by", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(
            ["auction_id"],
            ["auction.id"],
        ),
        sa.ForeignKeyConstraint(
            ["closed_by"],
            ["member.id"],
        ),
        sa.ForeignKeyConstraint(
            ["nominator_id"],
            ["member.id"],
        ),
        sa.ForeignKeyConstraint(
            ["team_id"],
            ["team.id"],
        ),
        sa.ForeignKeyConstraint(
            ["winning_bidder_id"],
            ["member.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_auctionlot_auction_id"), "auctionlot", ["auction_id"], unique=False)
    op.create_index(op.f("ix_auctionlot_status"), "auctionlot", ["status"], unique=False)
    op.create_index(op.f("ix_auctionlot_winning_bidder_id"), "auctionlot", ["winning_bidder_id"], unique=False)
    op.create_table(
        "teamownership",
        sa.Column("pool_id", sa.Uuid(), nullable=False),
        sa.Column("team_id", sa.Uuid(), nullable=False),
        sa.Column("owner_id", sa.Uuid(), nullable=False),
        sa.Column("auction_price", sa.Numeric(scale=2), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["member.id"],
        ),
        sa.ForeignKeyConstraint(
            ["pool_id"],
            ["pool.id"],
        ),
        sa.ForeignKeyConstraint(
            ["team_id"],
            ["team.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_teamownership_owner_id"), "teamownership", ["owner_id"], unique=False)
    op.create_index(op.f("ix_teamownership_pool_id"), "teamownership", ["pool_id"], unique=False)
    op.create_table(
        "bid",
        sa.Column("lot_id", sa.Uuid(), nullable=False),
        sa.Column("bidder_id", sa.Uuid(), nullable=False),
        sa.Column("amount", sa.Numeric(scale=2), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["bidder_id"],
            ["member.id"],
        ),
        sa.ForeignKeyConstraint(
            ["lot_id"],
            ["auctionlot.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_bid_bidder_id"), "bid", ["bidder_id"], unique=False)
    op.create_index(op.f("ix_bid_lot_id"), "bid", ["lot_id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_bid_lot_id"), table_name="bid")
    op.drop_index(op.f("ix_bid_bidder_id"), table_name="bid")
    op.drop_table("bid")
    op.drop_index(op.f("ix_teamownership_pool_id"), table_name="teamownership")
    op.drop_index(op.f("ix_teamownership_owner_id"), table_name="teamownership")
    op.drop_table("teamownership")
    op.drop_index(op.f("ix_auctionlot_winning_bidder_id"), table_name="auctionlot")
    op.drop_index(op.f("ix_auctionlot_status"), table_name="auctionlot")
    op.drop_index(op.f("ix_auctionlot_auction_id"), table_name="auctionlot")
    op.drop_table("auctionlot")
    op.drop_index(op.f("ix_member_pool_id"), table_name="member")
    op.drop_table("member")
    op.drop_index(op.f("ix_auction_pool_id"), table_name="auction")
    op.drop_table("auction")
    op.drop_index(op.f("ix_team_slug"), table_name="team")
    op.drop_index(op.f("ix_team_external_id"), table_name="team")
    op.drop_table("team")
    op.drop_index(op.f("ix_pool_slug"), table_name="pool")
    op.drop_index(op.f("ix_pool_season"), table_name="pool")
    op.drop_table("pool")
    # ### end Alembic commands ###
